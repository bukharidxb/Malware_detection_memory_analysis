
import numpy as np
import pandas as pd

from sklearn.model_selection import train_test_split
import pywt
import cv2
from memory_profiler import profile
import time

from sklearn.ensemble import RandomForestClassifier
X = np.load('Forensic_224_X.npy') 
y = np.load('Forensic_224_Y.npy')

label_encoder = preprocessing.LabelEncoder()
Y = label_encoder.fit_transform(y)
X_norm = X.astype('float32') /255

clahe = cv2.createCLAHE(clipLimit=0.02, tileGridSize=(4, 4))

data_wavelet= []
for  i in range(len(X)):
    equalized = clahe.apply(X[i])
    c = pywt.wavedec2(equalized,'db5',mode='periodization', level=1)
    cA2 = c[0]
    data_wavelet.append(cA2)
 
data_wavelet = np.array(data_wavelet)
X_train_reshape = data_wavelet.reshape(-1,112*112)

X_train_reshape = preprocessing.normalize(X_train_reshape)

X_train, X_test, y_train, y_test = train_test_split(X_train_reshape, Y, test_size=0.25,random_state=42)

@profile
def SVM_L(X_train,y_train, X_test, y_test):
	random_forest=RandomForestClassifier(n_estimators=200)
	random_forest.fit(X_train, y_train)
	y_pred_rf = random_forest.predict(X_test)
	
SVM_L(X_train,y_train, X_test, y_test)

